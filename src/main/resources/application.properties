spring.application.name=tiger
api.github-url=https://api.github.com
api.leetcode-url=${API_LEETCODE_URL}
api.github-token=${API_GITHUB_TOKEN}
api.groq-url=https://api.groq.com
api.groq-token=${API_GROQ_TOKEN}
api.linkedin-url=https://api.linkedin.com
api.my-url=https://tiger-backend-production.up.railway.app

api.linkedin-client-id=${LINKEDIN_CLIENT_ID}
api.linkedin-client-secret=${LINKEDIN_CLIENT_SECRET}
api.linkedin-callback=https://tiger-backend-production.up.railway.app/api/tiger/user/linkedin/callback
api.redirect-url=https://tiger-pro.onrender.com//signup?code=

api.groq-retry-count=3 
api.firebase-access-token=${API_FIREBASE_ACCESS_TOKEN}
api.firebase-refresh-token=${API_FIREBASE_REFRESH_TOKEN}
api.firebase-access-url=https://fcm.googleapis.com
api.firebase-projectid=tiger-new-01
api.google-clientid=${API_GOOGLE_CLIENTID}
api.google-client-secret=${API_GOOGLE_CLIENT_SECRET}


groq.daily-roast-prompt=Roast this users yesterday performance in the funniest, most savage way possible using as many famous personalities as you can \u2014 like  Narendra Modi, Elon Musk, SRK, ChaiGPT, Ratan Tata, Mark Zuckerberg, and more. Be clever, creative, and ruthless.these submission present inside of recentSubmissions section. roast if he has no submissions yesterday. \
Use yesterdays data like submissions, accuracy, recent activity, lazy streaks, overactivity, tough level of questions \u2014 everything is fair game. \
Format your response as multiple JSON blocks: \
\`\`\`json \
{ \
  "name": "Person", \
  "message": ["Funny roast line 1", "Funny line 2"] \
} \
\`\`\` \
Return only JSON blocks wrapped in triple backticks.

groq.profile-roast-prompt=Roast this LeetCode profile in the funniest, most savage way possible using TLEs, Submission rate,count , highlight consistency as many famous personalities like trump, modi , elon musk , and so on... \
Format your response as multiple JSON blocks: \
\`\`\`json \
{ \
  "name": "Person", \
  "message": ["Funny roast line 1", "Funny line 2"] \
} \
\`\`\` \
Return only JSON blocks wrapped in triple backticks.

groq.model=gemma2-9b-it
groq.retry-latency=2000
groq.notify-morning="Give a short motivational message encouraging users to stay focused and complete their targets today."
groq.notify-work="Give a one-line roast on my progress and motivate me to do my best work today."

# Max 10 connections in the pool
spring.datasource.hikari.maximum-pool-size=10

# Min 2 idle connections kept alive
spring.datasource.hikari.minimum-idle=2

# Recycle connections every 4.5 minutes (RDS closes idle at 5 mins by default)
spring.datasource.hikari.max-lifetime=270000

# Close connections idle for over 60s
spring.datasource.hikari.idle-timeout=60000

# Wait max 30s for a connection before timing out
spring.datasource.hikari.connection-timeout=30000

# Send a keep-alive query every 60s to keep idle connections alive
spring.datasource.hikari.keepalive-time=60000


spring.profiles.active=dev

# JDBC URL
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=avnadmin	

spring.datasource.password=AVNS_eTpWR93BnXWsQ8v2Yl2
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true



linkedin.client-id=86djhvi0c6ibw2
linkedin.client-secret=Tqfc5QFYE4i6sukA
linkedin.redirect-uri=https://tiger-backend-production.up.railway.app/linkedin/callback


